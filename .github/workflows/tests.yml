name: Test Digit Counter

on:
  - push

env:
  GHCR_REPOSITORY: ghcr.io/a-forsythe/digit-counter

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    outputs:
      github-tag: ${{ steps.define-tags.outputs.github-tag }}
      image-tag: ${{ steps.define-tags.outputs.image-tag }}
      branch-tag: ${{ steps.define-tags.outputs.branch-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Inject slugs
        uses: rlespinasse/github-slug-action@v3.x

      - name: Define tags
        id: define-tags
        run: |
          echo "::set-output name=github-tag::${GITHUB_SHA_SHORT}"
          echo "::set-output name=image-tag::sha-${{ github.sha }}"
          echo "::set-output name=branch-tag::sha-${GITHUB_REF_SLUG}-${GITHUB_SHA_SHORT}"

      - name: Log in to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GHCR
        env:
          GITHUB_TAG: ${GHCR_REPOSITORY}:${{ steps.define-tags.outputs.github-tag }}
          fake: ${{ secrets.FAKE_SECRET }}
        run: |
          export DOCKER_BUILDKIT=1
          echo "version='${{ steps.define-tags.outputs.image-tag }}'" > src/__version__.py
          docker build --secret id=fake --tag $GITHUB_TAG .
          docker push $GITHUB_TAG

  test:
    runs-on: ubuntu-latest
    name: Test
    needs:
      - build
    services:
      redis:
        image: redis:6.2-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 2s
          --health-timeout 5s
          --health-retries 25
        ports:
          - "6379:6379"
    container:
      image: ${GHCR_REPOSITORY}:${{ needs.build.outputs.github-tag }}
      env:
        ENV: test
        TEST_ARTIFACTS_PATH: /test-artifacts
        REDIS_URL: redis://redis:6379/0
      volumes:
        - ./test-artifacts:/test-artifacts
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
